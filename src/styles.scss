// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;


// Include the common styles for Angular Material. We include this here so that you only
// have to load a single CSS file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
$my-theme-primary: mat.define-palette(mat.$brown-palette);
$my-theme-accent: mat.define-palette(mat.$blue-palette, A200, A100, A400);
$my-theme-warn: mat.define-palette(mat.$red-palette);

$colors: 50, 100, 200, 300, 400, 500, 600, 700, 800, 900;

@each $color in $colors {
  .primary-#{$color} {
    color: mat.get-color-from-palette($my-theme-primary, $color);
  }

  .accent-#{$color} {
    color: mat.get-color-from-palette($my-theme-accent, $color);
  }
}

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$my-theme: mat.define-light-theme((color: (primary: $my-theme-primary,
        accent: $my-theme-accent,
        warn: $my-theme-warn,
      ),
      typography: mat.define-typography-config(),
      density: 0));

// Include theme styles for core and each component used in your app.
@include mat.all-component-themes($my-theme);

/* You can add global styles to this file, and also import other style files */

html,
body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}
